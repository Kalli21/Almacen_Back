// <auto-generated />
using System;
using Almacen_Back.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Almacen_Back.Migrations
{
    [DbContext(typeof(Almacen_Back_Context))]
    [Migration("20220801215807_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Almacen_Back.Models.Almacen", b =>
                {
                    b.Property<string>("cod_almacen")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dir_almacen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_almacen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tlf_almacen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cod_almacen");

                    b.ToTable("AL_ALMACEN");
                });

            modelBuilder.Entity("Almacen_Back.Models.Articulo", b =>
                {
                    b.Property<long>("cod_articulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("cod_articulo"), 1L, 1);

                    b.Property<string>("Cod_categoria")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cod_und_medida")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("des_articulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nom_articulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("perecible")
                        .HasColumnType("bit");

                    b.Property<double?>("precio_promedio_ref")
                        .HasColumnType("float");

                    b.Property<double?>("precio_ultimo_ref")
                        .HasColumnType("float");

                    b.Property<string>("ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("visible")
                        .HasColumnType("bit");

                    b.HasKey("cod_articulo");

                    b.HasIndex("Cod_categoria");

                    b.HasIndex("cod_und_medida");

                    b.ToTable("AL_ARTICULO");
                });

            modelBuilder.Entity("Almacen_Back.Models.Categoria", b =>
                {
                    b.Property<string>("Cod_categoria")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("des_categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cod_categoria");

                    b.ToTable("AL_CATEGORIA");
                });

            modelBuilder.Entity("Almacen_Back.Models.ControlStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("cant_fisica")
                        .HasColumnType("float");

                    b.Property<double?>("cant_minima_reposicion")
                        .HasColumnType("float");

                    b.Property<double?>("cant_real")
                        .HasColumnType("float");

                    b.Property<string>("cod_almacen")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("cod_articulo")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("cod_almacen");

                    b.HasIndex("cod_articulo");

                    b.ToTable("AL_CONTROL_STOCK");
                });

            modelBuilder.Entity("Almacen_Back.Models.DetIngreso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("cant_art_ingreso")
                        .HasColumnType("float");

                    b.Property<long>("cod_articulo")
                        .HasColumnType("bigint");

                    b.Property<long>("id_ingreso")
                        .HasColumnType("bigint");

                    b.Property<double?>("prec_unit_ingreso")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("cod_articulo");

                    b.HasIndex("id_ingreso");

                    b.ToTable("AL_DET_INGRESO");
                });

            modelBuilder.Entity("Almacen_Back.Models.DetIngresoSalida", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("cant_articulo")
                        .HasColumnType("float");

                    b.Property<long>("cod_articulo")
                        .HasColumnType("bigint");

                    b.Property<double?>("costo_unitario")
                        .HasColumnType("float");

                    b.Property<DateTime?>("fecha_vencimiento")
                        .HasColumnType("datetime2");

                    b.Property<long>("id_transaccion")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("cod_articulo");

                    b.HasIndex("id_transaccion");

                    b.ToTable("AL_DET_INGRESO_SALIDA");
                });

            modelBuilder.Entity("Almacen_Back.Models.DetPedido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("autoriza_compra")
                        .HasColumnType("bit");

                    b.Property<double?>("cant_aceptada")
                        .HasColumnType("float");

                    b.Property<double?>("cant_entregada")
                        .HasColumnType("float");

                    b.Property<double?>("cant_pedida")
                        .HasColumnType("float");

                    b.Property<double?>("cant_por_entregar")
                        .HasColumnType("float");

                    b.Property<long>("cod_articulo")
                        .HasColumnType("bigint");

                    b.Property<double?>("costo_cant_entrega")
                        .HasColumnType("float");

                    b.Property<long>("id_pedido")
                        .HasColumnType("bigint");

                    b.Property<bool>("pedido_para_compra")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("cod_articulo");

                    b.HasIndex("id_pedido");

                    b.ToTable("AL_DET_PEDIDO");
                });

            modelBuilder.Entity("Almacen_Back.Models.DetSalida", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("cant_articulo")
                        .HasColumnType("float");

                    b.Property<long>("cod_articulo")
                        .HasColumnType("bigint");

                    b.Property<long>("id_salida")
                        .HasColumnType("bigint");

                    b.Property<double?>("precio_unit_salida")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("cod_articulo");

                    b.HasIndex("id_salida");

                    b.ToTable("AL_DET_SALIDA");
                });

            modelBuilder.Entity("Almacen_Back.Models.GrupoAcceso", b =>
                {
                    b.Property<string>("Cod_grupo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cod_grupo");

                    b.ToTable("AL_GRUPO_ACCESO");
                });

            modelBuilder.Entity("Almacen_Back.Models.GrupoClave", b =>
                {
                    b.Property<long>("cod_clave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("cod_clave"), 1L, 1);

                    b.Property<string>("Cod_funcionario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cod_grupo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("apoya_a")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ppp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cod_clave");

                    b.HasIndex("Cod_grupo");

                    b.ToTable("AL_GRUPO_CLAVE");
                });

            modelBuilder.Entity("Almacen_Back.Models.Ingreso", b =>
                {
                    b.Property<long>("id_ingreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id_ingreso"), 1L, 1);

                    b.Property<DateTime>("Fecha_ingreso")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Importacion")
                        .HasColumnType("bit");

                    b.Property<string>("Num_guia_ingreso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cod_almacen")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("cod_clave")
                        .HasColumnType("bigint");

                    b.Property<string>("cod_proveedor")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id_ingreso");

                    b.HasIndex("cod_almacen");

                    b.HasIndex("cod_clave");

                    b.HasIndex("cod_proveedor");

                    b.ToTable("AL_INGRESO");
                });

            modelBuilder.Entity("Almacen_Back.Models.IngresoSalida", b =>
                {
                    b.Property<long>("id_transaccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id_transaccion"), 1L, 1);

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cod_almacen")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("cod_clave")
                        .HasColumnType("bigint");

                    b.Property<string>("cod_proveedor")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cod_tipo_transaccion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("fecha_proceso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_transaccion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ingreso")
                        .HasColumnType("bit");

                    b.Property<string>("num_guia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pendiente")
                        .HasColumnType("bit");

                    b.Property<bool>("procesado")
                        .HasColumnType("bit");

                    b.HasKey("id_transaccion");

                    b.HasIndex("cod_almacen");

                    b.HasIndex("cod_proveedor");

                    b.HasIndex("cod_tipo_transaccion");

                    b.ToTable("AL_INGRESO_SALIDA");
                });

            modelBuilder.Entity("Almacen_Back.Models.Pedido", b =>
                {
                    b.Property<long>("id_pedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id_pedido"), 1L, 1);

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("atendido")
                        .HasColumnType("bit");

                    b.Property<bool>("autorizado")
                        .HasColumnType("bit");

                    b.Property<string>("cod_almacen")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("cod_clave")
                        .HasColumnType("bigint");

                    b.Property<bool>("enviado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("fecha_despacho")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_entrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_pedido")
                        .HasColumnType("datetime2");

                    b.Property<string>("motivo_solicitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pedido_por")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("piso_destino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("proc_destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prog_destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("proy_destino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("recepcionado")
                        .HasColumnType("bit");

                    b.Property<bool>("urgente")
                        .HasColumnType("bit");

                    b.HasKey("id_pedido");

                    b.HasIndex("cod_almacen");

                    b.HasIndex("cod_clave");

                    b.ToTable("AL_PEDIDO");
                });

            modelBuilder.Entity("Almacen_Back.Models.Proveedor", b =>
                {
                    b.Property<string>("cod_proveedor")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cod_categoria")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Posicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RUC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("activo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("beneficiario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("razon_social")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("saludo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("web")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cod_proveedor");

                    b.HasIndex("Cod_categoria");

                    b.ToTable("AL_PROVEEDOR");
                });

            modelBuilder.Entity("Almacen_Back.Models.Salida", b =>
                {
                    b.Property<long>("id_salida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id_salida"), 1L, 1);

                    b.Property<DateTime>("Fecha_salida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cod_almacen")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("cod_clave")
                        .HasColumnType("bigint");

                    b.Property<bool>("despacho_pedido")
                        .HasColumnType("bit");

                    b.Property<bool>("donacion")
                        .HasColumnType("bit");

                    b.Property<string>("num_guia_salida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("venta")
                        .HasColumnType("bit");

                    b.HasKey("id_salida");

                    b.HasIndex("cod_almacen");

                    b.HasIndex("cod_clave");

                    b.ToTable("AL_SALIDA");
                });

            modelBuilder.Entity("Almacen_Back.Models.TipoTransaccion", b =>
                {
                    b.Property<string>("cod_tipo_transaccion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripción")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ingreso")
                        .HasColumnType("bit");

                    b.HasKey("cod_tipo_transaccion");

                    b.ToTable("AL_TIPO_TRANSACCION");
                });

            modelBuilder.Entity("Almacen_Back.Models.UnidadMedida", b =>
                {
                    b.Property<string>("cod_und_medida")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("des_und_medida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cod_und_medida");

                    b.ToTable("AL_UND_MEDIDA");
                });

            modelBuilder.Entity("Almacen_Back.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<long>("cod_clave")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("cod_clave");

                    b.ToTable("AL_USER");
                });

            modelBuilder.Entity("PedidoSalida", b =>
                {
                    b.Property<long>("Pedidoid_pedido")
                        .HasColumnType("bigint");

                    b.Property<long>("Salidaid_salida")
                        .HasColumnType("bigint");

                    b.HasKey("Pedidoid_pedido", "Salidaid_salida");

                    b.HasIndex("Salidaid_salida");

                    b.ToTable("PedidoSalida");
                });

            modelBuilder.Entity("Almacen_Back.Models.Articulo", b =>
                {
                    b.HasOne("Almacen_Back.Models.Categoria", "Categoria")
                        .WithMany("Articulo")
                        .HasForeignKey("Cod_categoria")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Almacen_Back.Models.UnidadMedida", "UnidadMedida")
                        .WithMany("Articulo")
                        .HasForeignKey("cod_und_medida")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Categoria");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("Almacen_Back.Models.ControlStock", b =>
                {
                    b.HasOne("Almacen_Back.Models.Almacen", "Almacen")
                        .WithMany("ControlStock")
                        .HasForeignKey("cod_almacen")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Almacen_Back.Models.Articulo", "Articulo")
                        .WithMany("ControlStock")
                        .HasForeignKey("cod_articulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Almacen");

                    b.Navigation("Articulo");
                });

            modelBuilder.Entity("Almacen_Back.Models.DetIngreso", b =>
                {
                    b.HasOne("Almacen_Back.Models.Articulo", "Articulo")
                        .WithMany("DetIngreso")
                        .HasForeignKey("cod_articulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Almacen_Back.Models.Ingreso", "Ingreso")
                        .WithMany("DetIngreso")
                        .HasForeignKey("id_ingreso")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Ingreso");
                });

            modelBuilder.Entity("Almacen_Back.Models.DetIngresoSalida", b =>
                {
                    b.HasOne("Almacen_Back.Models.Articulo", "Articulo")
                        .WithMany("DetIngresoSalida")
                        .HasForeignKey("cod_articulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Almacen_Back.Models.IngresoSalida", "IngresoSalida")
                        .WithMany("DetIngresoSalida")
                        .HasForeignKey("id_transaccion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("IngresoSalida");
                });

            modelBuilder.Entity("Almacen_Back.Models.DetPedido", b =>
                {
                    b.HasOne("Almacen_Back.Models.Articulo", "Articulo")
                        .WithMany("DetPedido")
                        .HasForeignKey("cod_articulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Almacen_Back.Models.Pedido", "Pedido")
                        .WithMany("DetPedido")
                        .HasForeignKey("id_pedido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Almacen_Back.Models.DetSalida", b =>
                {
                    b.HasOne("Almacen_Back.Models.Articulo", "Articulo")
                        .WithMany("DetSalida")
                        .HasForeignKey("cod_articulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Almacen_Back.Models.Salida", "Salida")
                        .WithMany("DetSalida")
                        .HasForeignKey("id_salida")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("Almacen_Back.Models.GrupoClave", b =>
                {
                    b.HasOne("Almacen_Back.Models.GrupoAcceso", "GrupoAcceso")
                        .WithMany("GrupoClave")
                        .HasForeignKey("Cod_grupo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("GrupoAcceso");
                });

            modelBuilder.Entity("Almacen_Back.Models.Ingreso", b =>
                {
                    b.HasOne("Almacen_Back.Models.Almacen", "Almacen")
                        .WithMany("Ingreso")
                        .HasForeignKey("cod_almacen")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Almacen_Back.Models.GrupoClave", "GrupoClave")
                        .WithMany("Ingreso")
                        .HasForeignKey("cod_clave")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Almacen_Back.Models.Proveedor", "Proveedor")
                        .WithMany("Ingreso")
                        .HasForeignKey("cod_proveedor")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Almacen");

                    b.Navigation("GrupoClave");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Almacen_Back.Models.IngresoSalida", b =>
                {
                    b.HasOne("Almacen_Back.Models.Almacen", "Almacen")
                        .WithMany("IngresoSalida")
                        .HasForeignKey("cod_almacen")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Almacen_Back.Models.Proveedor", "Proveedor")
                        .WithMany("IngresoSalida")
                        .HasForeignKey("cod_proveedor")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Almacen_Back.Models.TipoTransaccion", "TipoTransaccion")
                        .WithMany("IngresoSalida")
                        .HasForeignKey("cod_tipo_transaccion")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Almacen");

                    b.Navigation("Proveedor");

                    b.Navigation("TipoTransaccion");
                });

            modelBuilder.Entity("Almacen_Back.Models.Pedido", b =>
                {
                    b.HasOne("Almacen_Back.Models.Almacen", "Almacen")
                        .WithMany("Pedido")
                        .HasForeignKey("cod_almacen")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Almacen_Back.Models.GrupoClave", "GrupoClave")
                        .WithMany("Pedido")
                        .HasForeignKey("cod_clave")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Almacen");

                    b.Navigation("GrupoClave");
                });

            modelBuilder.Entity("Almacen_Back.Models.Proveedor", b =>
                {
                    b.HasOne("Almacen_Back.Models.Categoria", "Categoria")
                        .WithMany("Proveedor")
                        .HasForeignKey("Cod_categoria")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Almacen_Back.Models.Salida", b =>
                {
                    b.HasOne("Almacen_Back.Models.Almacen", "Almacen")
                        .WithMany("Salida")
                        .HasForeignKey("cod_almacen")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Almacen_Back.Models.GrupoClave", "GrupoClave")
                        .WithMany("Salida")
                        .HasForeignKey("cod_clave")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Almacen");

                    b.Navigation("GrupoClave");
                });

            modelBuilder.Entity("Almacen_Back.Models.User", b =>
                {
                    b.HasOne("Almacen_Back.Models.GrupoClave", "GrupoClave")
                        .WithMany()
                        .HasForeignKey("cod_clave")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GrupoClave");
                });

            modelBuilder.Entity("PedidoSalida", b =>
                {
                    b.HasOne("Almacen_Back.Models.Pedido", null)
                        .WithMany()
                        .HasForeignKey("Pedidoid_pedido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Almacen_Back.Models.Salida", null)
                        .WithMany()
                        .HasForeignKey("Salidaid_salida")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Almacen_Back.Models.Almacen", b =>
                {
                    b.Navigation("ControlStock");

                    b.Navigation("Ingreso");

                    b.Navigation("IngresoSalida");

                    b.Navigation("Pedido");

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("Almacen_Back.Models.Articulo", b =>
                {
                    b.Navigation("ControlStock");

                    b.Navigation("DetIngreso");

                    b.Navigation("DetIngresoSalida");

                    b.Navigation("DetPedido");

                    b.Navigation("DetSalida");
                });

            modelBuilder.Entity("Almacen_Back.Models.Categoria", b =>
                {
                    b.Navigation("Articulo");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Almacen_Back.Models.GrupoAcceso", b =>
                {
                    b.Navigation("GrupoClave");
                });

            modelBuilder.Entity("Almacen_Back.Models.GrupoClave", b =>
                {
                    b.Navigation("Ingreso");

                    b.Navigation("Pedido");

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("Almacen_Back.Models.Ingreso", b =>
                {
                    b.Navigation("DetIngreso");
                });

            modelBuilder.Entity("Almacen_Back.Models.IngresoSalida", b =>
                {
                    b.Navigation("DetIngresoSalida");
                });

            modelBuilder.Entity("Almacen_Back.Models.Pedido", b =>
                {
                    b.Navigation("DetPedido");
                });

            modelBuilder.Entity("Almacen_Back.Models.Proveedor", b =>
                {
                    b.Navigation("Ingreso");

                    b.Navigation("IngresoSalida");
                });

            modelBuilder.Entity("Almacen_Back.Models.Salida", b =>
                {
                    b.Navigation("DetSalida");
                });

            modelBuilder.Entity("Almacen_Back.Models.TipoTransaccion", b =>
                {
                    b.Navigation("IngresoSalida");
                });

            modelBuilder.Entity("Almacen_Back.Models.UnidadMedida", b =>
                {
                    b.Navigation("Articulo");
                });
#pragma warning restore 612, 618
        }
    }
}
